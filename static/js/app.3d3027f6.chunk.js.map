{"version":3,"sources":["src/utils/sizes.js","src/utils/colors.js","src/components/RoundedButton.js","src/features/focus/Focus.js","src/features/focus/FocusHistory.js","src/components/Countdown.js","src/features/timer/Timing.js","src/features/timer/Timer.js","App.js"],"names":["fontSizes","spacing","colors","RoundedButton","style","textStyle","size","props","TouchableOpacity","styles","radius","onPress","Text","text","title","StyleSheet","create","borderRadius","width","height","alignItems","justifyContent","borderColor","borderWidth","color","fontSize","Focus","addSubject","useState","subject","setSubject","View","container","titleContainer","inputContainer","TextInput","flex","marginRight","onSubmitEditing","nativeEvent","padding","fontWeight","paddingTop","flexDirection","FocusHistory","focusHistory","setFocusHistory","SafeAreaView","length","FlatList","contentContainerStyle","data","renderItem","item","index","status","historyItem","clearContainer","minutesToMillis","min","Countdown","minutes","isPaused","onProgress","onEnd","interval","React","useRef","millis","setMillis","minute","Math","floor","seconds","formatTime","time","CountDown","clearInterval","current","useEffect","setInterval","backgroundColor","Timing","onChangeTime","timingButton","Timer","focusSubject","onTimerEnd","clearSubject","useKeepAwake","setMinutes","isStarted","setIsStarted","progress","setProgress","countdown","Platform","OS","Vibration","vibrate","setTimeout","task","ProgressBar","buttonWrapper","textAlign","paddingBottom","paddingLeft","App","STATUSES","COMPLETE","CANCELLED","setFocusSubject","addFocusHistorySubjectWithStatus","key","String","a","async","AsyncStorage","getItem","history","JSON","parse","console","log","loadFocusHistory","setItem","stringify","CANCLl"],"mappings":"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","file":"static/js/app.3d3027f6.chunk.js","sourcesContent":["export const fontSizes= {\r\n  sm:8,\r\n  md:16,\r\n  lg:24,\r\n  xl:32,\r\n  xxl:40,\r\n  xxxl:80\r\n}\r\nexport const spacing= {\r\n  sm:8,\r\n  md:16,\r\n  lg:24,\r\n  xl:32,\r\n  xxl:40,\r\n  xxxl:80\r\n}","export const colors = {\r\n  darkBlue:'#252250',\r\n  white:'#fff',\r\n};\r\n","import React, { useState } from 'react';\r\nimport { TouchableOpacity, Text, StyleSheet } from 'react-native';\r\n\r\nexport const RoundedButton = ({\r\n  style = {},\r\n  textStyle = {},\r\n  size = 125,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles(size).radius, style]}\r\n      onPress={props.onPress}>\r\n      <Text style={[styles(size).text, textStyle]}>{props.title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = (size) =>\r\n  StyleSheet.create({\r\n    radius: {\r\n      borderRadius: size / 2,\r\n      width: size,\r\n      height: size,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderColor: '#fff',\r\n      borderWidth: 2,\r\n    },\r\n    text: {\r\n      color: '#fff',\r\n      fontSize: size / 3,\r\n    },\r\n  });\r\n","import React, { useState } from 'react';\r\nimport { fontSizes, spacing } from '../../utils/sizes';\r\nimport { colors } from '../../utils/colors';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { RoundedButton } from '../../components/RoundedButton';\r\n\r\nexport const Focus = ({ addSubject }) => {\r\n  const [subject, setSubject] = useState(null);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.titleContainer}>\r\n        <Text style={styles.title}>What would you like to focus on?</Text>\r\n        <View style={styles.inputContainer}>\r\n          \r\n          <TextInput\r\n            style={{ flex: 1, marginRight: spacing.md }}\r\n            onSubmitEditing={({ nativeEvent }) => {\r\n              setSubject(nativeEvent.text);\r\n            }}\r\n          />\r\n          <RoundedButton\r\n            size={50}\r\n            title=\"+\"\r\n            onPress={() => addSubject(subject)}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  titleContainer: {\r\n    flex: 0.5,\r\n    padding: spacing.md,\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    color: colors.white,\r\n    fontWeight: 'bold',\r\n    fontSize: spacing.lg,\r\n  },\r\n  inputContainer: {\r\n    paddingTop: 20,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  FlatList,\r\n  SafeAreaView\r\n} from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\n\r\nimport { fontSizes, spacing } from \"../../utils/sizes\";\r\nimport { RoundedButton } from \"../../components/RoundedButton\";\r\n\r\nexport const FocusHistory = ({ focusHistory, setFocusHistory }) => {\r\n  const clearHistory = () => {\r\n    setFocusHistory([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SafeAreaView style={{ flex: 0.5, alignItems: \"center\" }}>\r\n        <Text style={{ fontSize: fontSizes.lg, color: \"white\" }}>\r\n          Things we've focused on\r\n        </Text>\r\n        {!!focusHistory.length && (\r\n          <FlatList\r\n            style={{ width: \"100%\", height: \"100%\", paddingTop: 16 }}\r\n            contentContainerStyle={{ alignItems: \"center\" }}\r\n            data={focusHistory}\r\n            renderItem={({ item, index }) => (\r\n              <Text style={styles(item.status).historyItem}>\r\n                {item.subject}\r\n              </Text>\r\n            )}\r\n          />\r\n        )}\r\n        {!focusHistory.length && (\r\n          <Text style={{ color: \"white\" }}>Nothing yet</Text>\r\n        )}\r\n      </SafeAreaView>\r\n      <View style={styles.clearContainer}>\r\n        <RoundedButton size={75} title=\"Clear\" onPress={() => clearHistory()} />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = (status) => StyleSheet.create({\r\n  historyItem: {\r\n    color: status > 0 ? \"green\" : \"red\",\r\n    fontSize: fontSizes.md,\r\n  },\r\n  clearContainer: {\r\n    alignItems: \"center\",\r\n    padding: spacing.sm,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Text, View, StyleSheet } from 'react-native';\r\n\r\nimport { fontSizes, spacing } from '../utils/sizes';\r\nimport { colors } from '../utils/colors';\r\n\r\nconst minutesToMillis = (min) => min * 1000 * 60;\r\n\r\nexport const Countdown = ({ minutes = 20, isPaused, onProgress, onEnd }) => {\r\n  const interval = React.useRef(null);\r\n  const [millis, setMillis] = useState(minutesToMillis(minutes));\r\n  const minute = Math.floor(millis / 1000 / 60) % 60;\r\n  const seconds = Math.floor(millis / 1000) % 60;\r\n  const formatTime = (time) => (time < 10 ? `0${time}` : time);\r\n\r\n\r\n  const CountDown = () => {\r\n    setMillis((time) => {\r\n      if (time === 0) {\r\n        clearInterval(interval.current);\r\n        return time;\r\n      }\r\n      const timeLeft = time - 1000;\r\n      return timeLeft;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMillis(minutesToMillis(minutes));\r\n  }, [minutes]);\r\n\r\n  useEffect(() => {\r\n    onProgress(millis / minutesToMillis(minutes));\r\n    if (millis === 0) {\r\n      onEnd()\r\n    }\r\n  }, [millis]);\r\n\r\n  useEffect(() => {\r\n    if (isPaused) {\r\n      if (interval.current) clearInterval(interval.current);\r\n      return;\r\n    }\r\n    interval.current = setInterval(CountDown, 1000);\r\n    return () => clearInterval(interval.current);\r\n  }, [isPaused]);\r\n\r\n  return (\r\n    <Text style={styles.text}>\r\n      {formatTime(minute)}:{formatTime(seconds)}\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontSize: fontSizes.xxxl,\r\n    fontWeight: 'bold',\r\n    color: colors.white,\r\n    padding: spacing.lg,\r\n    backgroundColor: 'rgba(94,132,226,0.3)',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { RoundedButton } from '../../components/RoundedButton';\r\nexport const Timing = ({ onChangeTime }) => {\r\n  return (\r\n    <>\r\n      <View style={styles.timingButton}>\r\n        <RoundedButton size={75} title=\"10\" onPress={() => onChangeTime(10)} />\r\n      </View>\r\n      <View style={styles.timingButton}>\r\n        <RoundedButton size={75} title=\"15\" onPress={() => onChangeTime(15)} />\r\n      </View>\r\n\r\n      <View style={styles.timingButton}>\r\n        <RoundedButton size={75} title=\"20\" onPress={() => onChangeTime(20)} />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  timingButton: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n});\r\n","import React, { useState } from 'react';\r\nimport { View, StyleSheet, Text, Vibration, Platform } from 'react-native';\r\nimport { colors } from '../../utils/colors';\r\nimport { spacing } from '../../utils/sizes';\r\nimport { Countdown } from '../../components/Countdown';\r\nimport { RoundedButton } from '../../components/RoundedButton';\r\nimport { ProgressBar } from 'react-native-paper';\r\nimport { Timing } from './Timing';\r\nimport { useKeepAwake } from 'expo-keep-awake';\r\n\r\nconst DEFAULT_TIME = 0.1;\r\n\r\nexport const Timer = ({ focusSubject, onTimerEnd ,clearSubject}) => {\r\n  useKeepAwake();\r\n  const [minutes, setMinutes] = useState(DEFAULT_TIME);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [progress, setProgress] = useState(1);\r\n\r\n  const onProgress = (progress) => {\r\n    setProgress(progress);\r\n  };\r\n\r\n  const vibrate = () => {\r\n    if (Platform.OS === 'ios') {\r\n      const interval = setInterval(() => Vibration.vibrate, 1000);\r\n      setTimeout(() => clearInterval(interval), 10000);\r\n    } else {\r\n      Vibration.vibrate(10000);\r\n    }\r\n  };\r\n\r\n  const onEnd = () => {\r\n    vibrate();\r\n    setMinutes(DEFAULT_TIME);\r\n    setProgress(1);\r\n    setIsStarted(false);\r\n    onTimerEnd();\r\n  };\r\n  const changeTime = (min) => {\r\n    setMinutes(min);\r\n    setProgress(1);\r\n    setIsStarted(false);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.countdown}>\r\n        <Countdown\r\n          minutes={minutes}\r\n          isPaused={!isStarted}\r\n          onProgress={onProgress}\r\n          onEnd={onEnd}\r\n        />\r\n      </View>\r\n      <View style={{ paddingTop: spacing.xxl }}>\r\n        <Text style={styles.title}>Timer goes here:</Text>\r\n        <Text style={styles.task}>{focusSubject}</Text>\r\n      </View>\r\n      <View style={{ paddingTop: spacing.sm }}>\r\n        <ProgressBar\r\n          progress={progress}\r\n          color=\"#5E84E2\"\r\n          style={{ height: 10 }}\r\n        />\r\n      </View>\r\n      <View style={styles.buttonWrapper}>\r\n        <Timing onChangeTime={changeTime} />\r\n      </View>\r\n      <View style={styles.buttonWrapper}>\r\n        {!isStarted ? (\r\n          <RoundedButton\r\n            title=\"start\"\r\n            onPress={() => {\r\n              setIsStarted(true);\r\n            }}\r\n          />\r\n        ) : (\r\n          <RoundedButton\r\n            title=\"pause\"\r\n            onPress={() => {\r\n              setIsStarted(false);\r\n            }}\r\n          />\r\n        )}\r\n      </View>\r\n      <View style={styles.clearSubject}>\r\n           <RoundedButton\r\n            title=\"-\"\r\n            size={50}\r\n            onPress={() => {\r\n              clearSubject();\r\n            }}\r\n          />\r\n        </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    color: colors.white,\r\n    textAlign: 'center',\r\n  },\r\n  task: {\r\n    color: colors.white,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  countdown: {\r\n    flex: 0.5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  buttonWrapper: {\r\n    flex: 0.3,\r\n    flexDirection: 'row',\r\n    padding: 15,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  clearSubject:{\r\n    paddingBottom:25,\r\n    paddingLeft:25\r\n  }\r\n});\r\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\nimport { Focus } from './src/features/focus/Focus';\nimport { FocusHistory } from './src/features/focus/FocusHistory';\nimport { Timer } from './src/features/timer/Timer';\nimport { spacing } from './src/utils/sizes';\nimport { colors } from './src/utils/colors';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function App() {\n  const STATUSES = {\n    COMPLETE: 1,\n    CANCELLED: 2,\n  };\n\n  const [focusSubject, setFocusSubject] = useState(null);\n  const [focusHistory, setFocusHistory] = useState([]);\n\n  const addFocusHistorySubjectWithStatus = (subject, status) => {\n    setFocusHistory([...focusHistory, { key:String(focusHistory.length+1),subject, status }]);\n  };\n\n  const saveFocusHistory = async () => {\n    try {\n      await AsyncStorage.setItem('focusHistory', JSON.stringify(focusHistory));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const loadFocusHistory = async () => {\n    try {\n      const history = await AsyncStorage.getItem('focusHistory');\n      if (history && JSON.parse(history).length) {\n        setFocusHistory(JSON.parse(history));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\nuseEffect(()=>{loadFocusHistory()},[])\n\n  useEffect(() => {\n    saveFocusHistory();\n  }, [focusHistory]);\n\n  return (\n    <View style={styles.container}>\n      {focusSubject ? (\n        <Timer\n          focusSubject={focusSubject}\n          onTimerEnd={() => {\n            addFocusHistorySubjectWithStatus(focusSubject, STATUSES.COMPLETE);\n            setFocusSubject(null);\n          }}\n          clearSubject={() => {\n            addFocusHistorySubjectWithStatus(focusSubject, STATUSES.CANCLl);\n            setFocusSubject(null);\n          }}\n        />\n      ) : (\n        <>\n          <Focus addSubject={setFocusSubject} />\n          <FocusHistory focusHistory={focusHistory} setFocusHistory={setFocusHistory} />\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Platform.OS === 'ios' ? spacing.md : spacing.lg,\n    backgroundColor: colors.darkBlue,\n  },\n});\n"],"sourceRoot":""}